Entradas:
    - n: número de itens a serem empacotados
    - s[n]: arranjo com os pesos dos itens
    - B: tamanho das pacotes

Saída:
    - E: conjunto dos pacotes, que somados não devem ultrapassar B


1. Único item
    Descrição: Caso onde há apenas único item que ocupa toda a caixa.
    Entradas: 
        n = 1
        s = [10]
        B = 10
    Saída Esperada: 
        E = {{10}}
    Solução Ótima: 1 caixa.


2. Tamanho exato de B
    Descrição: Caso onde cada item ocupa uma caixa inteira.
    Entradas: 
        n = 2
        s = [4, 4]
        B = 4
    Saída Esperada: 
        E = {{4}, {4}}
    Solução Ótima: 2 pacotes.

3. Limite da capacidade
    Descrição: Caso onde a soma dos itens passa B por pouco, resultando na necessidade de dois pacotes.
    Entradas: 
        n = 3
        s = [2, 3, 8]
        B = 10
    Saída Esperada: 
        E = {{2,8}, {3}}
    Solução Ótima: 2 pacotes;


4. Itens muito pesados
    Descrição: Caso onde todos os itens são maiores que o tamanho da caixa.
    Entradas: 
        n = 3
        s = [5, 6, 7]
        B = 4
    Saída Esperada: 
        E = {}
    Solução Ótima: 0 pacotes.


5. Pacote com sobra de espaço
    Descrição: Caso onde os itens podem ser empacotados em duas pacotes.
    Entradas: 
        n = 3
        s = [1, 2, 3]
        B = 4
    Saída Esperada: 
        E = {{1,3}, {2}}
    Solução Ótima: 2 pacotes.
    

6. Itens encaixam perfeitamente nos pacotes
    Descrição: Caso onde a combinação dos itens em todos os pacotes tem o tamanho de B.
    Entradas: 
        n = 4
        s = [2, 3, 5, 4]
        B = 7
    Saída Esperada: 
        E = {{2,5}, {3,4}}
    Solução Ótima: 2 pacotes.


7. Todos os itens são iguais
    Descrição: Caso onde todos os itens são do mesmo tamanho.
    Entradas: 
        n = 5
        s = [2, 2, 2, 2, 2]
        B = 4
    Saída Esperada:
        E = {{2,2}, {2,2}, {2}}
    Solução Ótima: 3 pacotes.


8. Necessário rearranjo para obter a solução ótima
    Descrição: Caso onde a solução ótima são exatamente 4 pacotes.
    Entradas:
        n = 6
        s = [5, 8, 1, 4, 7, 6]
        B = 10
    Saída Esperada:
        E = {{8,1}, {7}, {6,4}, {5}}
    Solução Ótima: 4 pacotes.


9. Combinações complexas de itens
    Descrição: Caso onde a capacidade do algoritmo de encontrar uma combinação que minimize o número de pacotes é testada.
    Entradas: 
        n = 7
        s = [1, 3, 3, 3, 4, 2, 1]
        B = 5
    Saída Esperada: 
        E = {{1,4}, {3,2}, {3}, {1,3}}
    Solução Ótima: 4 pacotes.


10. Capacidade Excedente
    Descrição: Caso onde os itens podem ser empacotados em diversas ordens e mesmo assim respeitar a condição.
    Entradas: 
        n = 8
        s = [7, 3, 5, 2, 8, 2, 2, 1]
        B = 10
    Saída Esperada (uma das possíveis): 
        E = {{7,3}, {5,2,2,1}, {8,2}}
    Solução Ótima: 3 pacotes.


11. Necessário rearranjo para obter a solução ótima
    Descrição: Caso onde a solução ótima são exatamente 5 pacotes.
    Entradas:
        n = 9
        s = [3, 5, 6, 7, 8, 2, 4, 1, 9]
        B = 10
    Saída Esperada:
        E = {{9}, {8,2}, {7,3}, {6,4}, {5,1}}
    Solução Ótima: 5 pacotes.


12. Caso com itens pequenos
    Descrição: Caso onde todos os itens são pequenos.
    Entradas: 
        n = 10
        s = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        B = 2
    Saída Esperada: 
        E = {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}}
    Solução Ótima: 5 pacotes.