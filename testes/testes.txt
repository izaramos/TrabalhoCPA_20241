Entradas:
    - n: número de itens a serem empacotados
    - s[n]: arranjo com os pesos dos itens
    - B: tamanho das caixas

Saída:
    - E: conjunto dos pacotes, que somados não devem ultrapassar B


1. Base
    Descrição: Caso onde os itens podem ser empacotados em duas caixas.
    Entradas: 
        n = 4
        s = [1, 2, 3]
        B = 4
    Saída Esperada: 
        E = {{1, 3}, {2}}
    

2. Todos os itens são iguais
    Descrição: Caso onde todos os itens são do mesmo tamanho.
    Entradas: 
        n = 4
        s = [2, 2, 2, 2]
        B = 4
    Saída Esperada:
        E = {{2, 2}, {2, 2}}


3. Tamanho exato de B
    Descrição: Caso onde cada item ocupa uma caixa inteira.
    Entradas: 
        n = 3
        s = [4, 4, 4]
        B = 4
    Saída Esperada: 
        E = {{4}, {4}, {4}}


4. Sobrando espaço em algum pacote
    Descrição: Caso onde um item não preencheu todo o pacote.
    Entradas: 
        n = 3
        s = [2, 3, 4]
        B = 5
    Saída Esperada: 
        E = {{2, 3}, {4}}


5. Itens muito pesados
    Descrição: Caso onde todos os itens são maiores que o tamanho da caixa.
    Entradas: 
        n = 3
        s = [5, 6, 7]
        B = 4
    Saída Esperada: 
        E = {}


6. Combinações complexas de itens
    Descrição: Caso onde a capacidade do algoritmo de encontrar uma combinação que minimize o número de caixas é testada.
    Entrada: 
        n = 7
        s = [1, 3, 3, 3, 4, 2, 1]
        B = 5
    Saída Esperada: 
        E = {{1, 4}, {3, 2}, {3}, {1, 3}}


7. Único item
    Descrição: Caso onde há apenas único item que ocupa toda a caixa.
    Entrada: 
        n = 1
        s = [10]
        B = 10
    Saída Esperada: 
        E = {{10}}


8. Caso com itens pequenos
    Descrição: Caso onde todos os itens são pequenos.
    Entrada: 
        n = 10
        s = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        B = 2
    Saída Esperada: 
        E = {{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}}


9. Capacidade Excedente
    Descrição: Caso onde os itens podem ser empacotados em diversas ordens e mesmo assim respeitar a condição.
    Entrada: 
        n = 8
        s = [7, 3, 5, 2, 8, 6, 2, 1]
        B = 10
    Saída Esperada (uma das possíveis): 
        E = {{7, 3}, {5, 2, 2, 1}, {8, 2}}


10. Itens encaixam perfeitamente nos pacotes
    Descrição: Caso onde a combinação dos itens em todos os pacotes tem o tamanho de B.
    Entrada: 
        n = 4
        s = [2, 3, 5, 7]
        B = 7
    Saída Esperada: 
        E = {{2, 5}, {3, 4}}


11. Limite da capacidade
    Descrição: Caso onde a soma dos itens passa B por pouco, resultando na necessidade de dois pacotes.
    Entrada: 
        n = 3
        s = [2, 3, 8]
        B = 10
    Saída Esperada: 
        E = {{2, 8}, {3}}